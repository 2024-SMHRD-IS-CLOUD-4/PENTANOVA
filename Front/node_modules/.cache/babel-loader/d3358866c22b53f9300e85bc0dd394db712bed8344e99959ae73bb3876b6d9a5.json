{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Desktop\\\\pentanova\\\\PENTANOVA-1\\\\PENTANOVA\\\\Front\\\\src\\\\component\\\\Uploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageBase64, setImageBase64] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [responseMessage, setResponseMessage] = useState('');\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('이미지를 선택해주세요.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://192.168.219.68:8000/upload_image', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const data = response.data;\n      setResponseMessage(data.message);\n      if (data.image) {\n        setImageBase64(data.image);\n        setPredictions(data.predictions);\n        setStartTime(data.start_time);\n        setEndTime(data.end_time);\n      } else {\n        setImageBase64('');\n        setPredictions([]);\n        setStartTime(null);\n        setEndTime(null);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(error);\n      setResponseMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || '이미지 업로드 실패');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC \\uBC0F \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC \\uBC0F \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }, this), imageBase64 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBD84\\uC11D \\uACB0\\uACFC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${imageBase64}`,\n        alt: \"Analyzed Result\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD074\\uB798\\uC2A4: \", prediction.class]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC2E0\\uB8B0\\uB3C4: \", prediction.confidence.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC785\\uB825 \\uC2DC\\uAC04: \", new Date(startTime * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uCD9C\\uB825 \\uC2DC\\uAC04: \", new Date(endTime * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC18C\\uC694 \\uC2DC\\uAC04: \", (endTime - startTime).toFixed(2), \"\\uCD08\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUploader, \"0zfUIqZMRXbPxT8g7UGIDJAnmSo=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","file","setFile","imageBase64","setImageBase64","predictions","setPredictions","responseMessage","setResponseMessage","startTime","setStartTime","endTime","setEndTime","handleFileChange","event","selectedFile","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","data","message","image","start_time","end_time","error","_error$response","_error$response$data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","src","alt","style","maxWidth","height","map","prediction","index","class","confidence","toFixed","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Desktop/pentanova/PENTANOVA-1/PENTANOVA/Front/src/component/Uploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageUploader() {\r\n    const [file, setFile] = useState(null);\r\n    const [imageBase64, setImageBase64] = useState('');\r\n    const [predictions, setPredictions] = useState([]);\r\n    const [responseMessage, setResponseMessage] = useState('');\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFile = event.target.files[0];\r\n        setFile(selectedFile);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!file) {\r\n            alert('이미지를 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://192.168.219.68:8000/upload_image', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            const data = response.data;\r\n            setResponseMessage(data.message);\r\n\r\n            if (data.image) {\r\n                setImageBase64(data.image);\r\n                setPredictions(data.predictions);\r\n                setStartTime(data.start_time);\r\n                setEndTime(data.end_time);\r\n            } else {\r\n                setImageBase64('');\r\n                setPredictions([]);\r\n                setStartTime(null);\r\n                setEndTime(null);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setResponseMessage(error.response?.data?.error || '이미지 업로드 실패');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>이미지 업로드 및 분석</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\r\n                <button type=\"submit\">업로드 및 분석</button>\r\n            </form>\r\n            {responseMessage && <p>{responseMessage}</p>}\r\n            {imageBase64 && (\r\n                <div>\r\n                    <h2>분석 결과:</h2>\r\n                    <img\r\n                        src={`data:image/jpeg;base64,${imageBase64}`}\r\n                        alt=\"Analyzed Result\"\r\n                        style={{ maxWidth: '100%', height: 'auto' }}\r\n                    />\r\n                    <ul>\r\n                        {predictions.map((prediction, index) => (\r\n                            <li key={index}>\r\n                                <p>클래스: {prediction.class}</p>\r\n                                <p>신뢰도: {prediction.confidence.toFixed(2)}</p>\r\n                                <p>입력 시간: {new Date(startTime * 1000).toLocaleString()}</p>\r\n                                <p>출력 시간: {new Date(endTime * 1000).toLocaleString()}</p>\r\n                                <p>소요 시간: {(endTime - startTime).toFixed(2)}초</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}