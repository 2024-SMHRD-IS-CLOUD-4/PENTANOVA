{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Desktop\\\\pentanova\\\\PENTANOVA-1\\\\PENTANOVA\\\\front\\\\src\\\\function\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppData = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const login = userData => {\n    setIsLoggedIn(true);\n    setUser(userData);\n    sessionStorage.setItem('user', JSON.stringify(userData)); // 로컬 스토리지 또는 세션 스토리지에 저장\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    sessionStorage.removeItem('user'); // 로컬 스토리지 또는 세션 스토리지에서 제거\n  };\n  const value = {\n    isLoggedIn,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AppData.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"rtvmPgFuLm32CRKYJM3CV+f7aEs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AppData","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","user","setUser","login","userData","sessionStorage","setItem","JSON","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Desktop/pentanova/PENTANOVA-1/PENTANOVA/front/src/function/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\n\r\nexport const AppData = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const login = (userData) => {\r\n        setIsLoggedIn(true);\r\n        setUser(userData);\r\n        sessionStorage.setItem('user', JSON.stringify(userData)); // 로컬 스토리지 또는 세션 스토리지에 저장\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n        setUser(null);\r\n        sessionStorage.removeItem('user'); // 로컬 스토리지 또는 세션 스토리지에서 제거\r\n    };\r\n\r\n    const value = { isLoggedIn, user, login, logout };\r\n    return <AppData.Provider value={value}>{children}</AppData.Provider>;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtD,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,KAAK,GAAIC,QAAQ,IAAK;IACxBJ,aAAa,CAAC,IAAI,CAAC;IACnBE,OAAO,CAACE,QAAQ,CAAC;IACjBC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBT,aAAa,CAAC,KAAK,CAAC;IACpBE,OAAO,CAAC,IAAI,CAAC;IACbG,cAAc,CAACK,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,KAAK,GAAG;IAAEZ,UAAU;IAAEE,IAAI;IAAEE,KAAK;IAAEM;EAAO,CAAC;EACjD,oBAAOf,OAAA,CAACC,OAAO,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmB,CAAC;AACxE,CAAC;AAAAlB,EAAA,CAlBYF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}